<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AttachmentsDescription" xml:space="preserve">
    <value>Order related files.</value>
  </data>
  <data name="AttachmentsGroupName" xml:space="preserve">
    <value>Attachments</value>
  </data>
  <data name="AttachmentsName" xml:space="preserve">
    <value>Attachments</value>
  </data>
  <data name="AttachmentsPrompt" xml:space="preserve">
    <value>Please, add related files.</value>
  </data>
  <data name="AttachmentsShortName" xml:space="preserve">
    <value>Attachments</value>
  </data>
  <data name="Created" xml:space="preserve">
    <value>Created</value>
  </data>
  <data name="CreatedDescription" xml:space="preserve">
    <value>Date and time (UTC) when the Order is placed in the Arenal by the Orderer (read only).</value>
  </data>
  <data name="CreatedName" xml:space="preserve">
    <value>Date and time (UTC) of placing Order</value>
  </data>
  <data name="CreatedShortName" xml:space="preserve">
    <value>Created</value>
  </data>
  <data name="DoctorDescription" xml:space="preserve">
    <value>Reference to a doctor who is responsible for ordering the order.</value>
  </data>
  <data name="DoctorGroupName" xml:space="preserve">
    <value>Doctor</value>
  </data>
  <data name="DoctorName" xml:space="preserve">
    <value>Doctor responsible for the order</value>
  </data>
  <data name="DoctorPrompt" xml:space="preserve">
    <value>Please, set doctor who is responsible for the order.</value>
  </data>
  <data name="DoctorShortName" xml:space="preserve">
    <value>Doctor</value>
  </data>
  <data name="GeneralGroup" xml:space="preserve">
    <value>General</value>
  </data>
  <data name="LinkedReferralsDescription" xml:space="preserve">
    <value>References to referrals, placed in an external service.</value>
  </data>
  <data name="LinkedReferralsGroupName" xml:space="preserve">
    <value>References</value>
  </data>
  <data name="LinkedReferralsName" xml:space="preserve">
    <value>Linked referrals</value>
  </data>
  <data name="LinkedReferralsPrompt" xml:space="preserve">
    <value>Please, add linked referrals.</value>
  </data>
  <data name="LinkedReferralsShortName" xml:space="preserve">
    <value>Linked referrals</value>
  </data>
  <data name="LocalCreatedDescription" xml:space="preserve">
    <value>Date and time (local timezone) of placing Order</value>
  </data>
  <data name="LocalCreatedName" xml:space="preserve">
    <value>Date and time (local timezone) of placing Order</value>
  </data>
  <data name="LocalModifiedDescription" xml:space="preserve">
    <value>Date and time (local timezone) when the Order is modified by the Orderer (read only).</value>
  </data>
  <data name="LocalModifiedName" xml:space="preserve">
    <value>Date and time (local timezone) the Order was modified</value>
  </data>
  <data name="LocalTakenOrRejectedDescription" xml:space="preserve">
    <value>Date and time when the order is taken or rejected by the provider (Local time).</value>
  </data>
  <data name="LocalTakenOrRejectedName" xml:space="preserve">
    <value>Date and time when order is taken or rejected (Local Time)</value>
  </data>
  <data name="LocalTakenOrRejectedShortName" xml:space="preserve">
    <value>Taken or rejected (Local Time)</value>
  </data>
  <data name="Modified" xml:space="preserve">
    <value>Modified</value>
  </data>
  <data name="ModifiedDescription" xml:space="preserve">
    <value>Date and time (UTC) when the Order is modified by the Orderer (read only).</value>
  </data>
  <data name="ModifiedName" xml:space="preserve">
    <value>Date and time (UTC) the Order was modified</value>
  </data>
  <data name="OrdererGroup" xml:space="preserve">
    <value>Orderer</value>
  </data>
  <data name="PatientDescription" xml:space="preserve">
    <value>Reference to a person who is a subject of services or examinations.</value>
  </data>
  <data name="PatientGroupName" xml:space="preserve">
    <value>Patient</value>
  </data>
  <data name="PatientName" xml:space="preserve">
    <value>Patient</value>
  </data>
  <data name="PatientPrompt" xml:space="preserve">
    <value>Please, set person, subject of the services or examination.</value>
  </data>
  <data name="PatientShortName" xml:space="preserve">
    <value>Patient</value>
  </data>
  <data name="PlacerIdDescription" xml:space="preserve">
    <value>Identifies the ordering party by its Arenal Id.</value>
  </data>
  <data name="PlacerIdName" xml:space="preserve">
    <value>Arenal Id of the orderer</value>
  </data>
  <data name="PlacerIdPrompt" xml:space="preserve">
    <value>Please, set a valid Orderer.</value>
  </data>
  <data name="PlacerIdShortName" xml:space="preserve">
    <value>Placer Id</value>
  </data>
  <data name="PlacerNoteDescription" xml:space="preserve">
    <value>Note provided by the placer of the order.</value>
  </data>
  <data name="PlacerNoteGroup" xml:space="preserve">
    <value>Placer Note</value>
  </data>
  <data name="PlacerNoteName" xml:space="preserve">
    <value>Note from the placer</value>
  </data>
  <data name="PlacerNotePrompt" xml:space="preserve">
    <value>Please, set note from placer.</value>
  </data>
  <data name="PlacerNoteShortName" xml:space="preserve">
    <value>Placer Note</value>
  </data>
  <data name="PlacerOrderDescription" xml:space="preserve">
    <value>Placer's order identifier (optional). This is the identifier generated by the party which places the order.</value>
  </data>
  <data name="PlacerOrderName" xml:space="preserve">
    <value>Order Id generated by the placer.</value>
  </data>
  <data name="PlacerOrderPrompt" xml:space="preserve">
    <value>Please, set a valid Order from the placer's side.</value>
  </data>
  <data name="PlacerOrderShortName" xml:space="preserve">
    <value>Placer's order Id</value>
  </data>
  <data name="ProviderGroup" xml:space="preserve">
    <value>Provider</value>
  </data>
  <data name="ProviderIdDescription" xml:space="preserve">
    <value>ArenalId of the service provider to which this order is intended (conditional).</value>
  </data>
  <data name="ProviderIdName" xml:space="preserve">
    <value>Arenal Id of the provider</value>
  </data>
  <data name="ProviderIdPrompt" xml:space="preserve">
    <value>Please, set valid Provider.</value>
  </data>
  <data name="ProviderIdShortName" xml:space="preserve">
    <value>Provider Id</value>
  </data>
  <data name="ProviderNoteDescription" xml:space="preserve">
    <value>Note provided from the provider of the order.</value>
  </data>
  <data name="ProviderNoteGroup" xml:space="preserve">
    <value>Provider Note</value>
  </data>
  <data name="ProviderNoteName" xml:space="preserve">
    <value>Note from the provider</value>
  </data>
  <data name="ProviderNotePrompt" xml:space="preserve">
    <value>Please, set note from provider.</value>
  </data>
  <data name="ProviderNoteShortName" xml:space="preserve">
    <value>Provider Note</value>
  </data>
  <data name="ProviderOrderDescription" xml:space="preserve">
    <value>Provider's order identifier (optional). This is the identifier generated by the party which consumes the order.</value>
  </data>
  <data name="ProviderOrderName" xml:space="preserve">
    <value>Order Id generated by the provider.</value>
  </data>
  <data name="ProviderOrderPrompt" xml:space="preserve">
    <value>Please, set a valid Order from the provider's side.</value>
  </data>
  <data name="ProviderOrderShortName" xml:space="preserve">
    <value>Provider's order id.</value>
  </data>
  <data name="SamplesDescription" xml:space="preserve">
    <value>Non empty, list of unique samples to be analyzed.</value>
  </data>
  <data name="SamplesGroupName" xml:space="preserve">
    <value>Samples</value>
  </data>
  <data name="SamplesName" xml:space="preserve">
    <value>List of provided samples</value>
  </data>
  <data name="SamplesPrompt" xml:space="preserve">
    <value>Please, add at least one sample.</value>
  </data>
  <data name="SamplesShortName" xml:space="preserve">
    <value>Samples</value>
  </data>
  <data name="ServicesDescription" xml:space="preserve">
    <value>Non empty list of ordered services or examinations.</value>
  </data>
  <data name="ServicesGroupName" xml:space="preserve">
    <value>Services</value>
  </data>
  <data name="ServicesName" xml:space="preserve">
    <value>List of ordered services</value>
  </data>
  <data name="ServicesPrompt" xml:space="preserve">
    <value>Please, add at least one service/examination.</value>
  </data>
  <data name="ServicesShortName" xml:space="preserve">
    <value>Services</value>
  </data>
  <data name="StatusDescription" xml:space="preserve">
    <value>Order status according to the statuses in the system (Available, Complete, Rejected etc.)</value>
  </data>
  <data name="StatusName" xml:space="preserve">
    <value>Order Status</value>
  </data>
  <data name="StatusPrompt" xml:space="preserve">
    <value>Please, set status for the order.</value>
  </data>
  <data name="StatusShortName" xml:space="preserve">
    <value>Status</value>
  </data>
  <data name="TakenOrRejectedDescription" xml:space="preserve">
    <value>Date and time when the order is taken or rejected by the provider (UTC).</value>
  </data>
  <data name="TakenOrRejectedName" xml:space="preserve">
    <value>Date and time when order is taken or rejected</value>
  </data>
  <data name="TakenOrRejectedShortName" xml:space="preserve">
    <value>Taken or rejected</value>
  </data>
  <data name="VersionDescription" xml:space="preserve">
    <value>Version is an integer value which is incremented and every change of the Order, starting at 0 (red only).</value>
  </data>
  <data name="VersionName" xml:space="preserve">
    <value>Version of the Order</value>
  </data>
  <data name="VersionShortName" xml:space="preserve">
    <value>Version</value>
  </data>
  <data name="WorkflowDescription" xml:space="preserve">
    <value>Defines the rules for the Order. See the documentation for further details about the supported workflows.</value>
  </data>
  <data name="WorkflowName" xml:space="preserve">
    <value>Workflow</value>
  </data>
  <data name="WorkflowPrompt" xml:space="preserve">
    <value>Please, enter a valid workflow.</value>
  </data>
  <data name="WorkflowShortName" xml:space="preserve">
    <value>Workflow</value>
  </data>
</root>